repository_name: InvokeAI Workflow Processor Node
author: dwringer
license: MIT
description: Calls a predefined workflow payload with a validated input json list.
keywords: [node, invokeai, python, generativeai]
requirements:
  - invokeai>=4
intro: |
  The Enqueue Workflow Batch node operates by applying user updates to a pre-defined payload and sending it directly to the InvokeAI backend API using http.client. The node loads an example payload JSON (as generated by the frontend), uses it to create a pydantic schema, and then uses that to validate a given ordered list of linear UI input values, in a structure like:
  \`\`\`
  [
   {"prompt": "a portrait of a housecat wearing a tie and business attire"},
   {"value": 1728},
   {"value": 1152},
   {"seed": 700},
   {"num_steps": 4}
  ]
  \`\`\`

  These structures can be input directly as strings, or created with a set of Field List Builder nodes. Every Field List Builder node has one `value` output and three inputs: `existing_json`, `field_name`, and `value`. These nodes are chained together by connecting the `value` output of one to the `existing_json` input of another, by which they can be sequenced in the order they appear in the workflow's linear UI panel.

  Note that field names given can be either the base name as defined in the node itself, or the user-applied label (if it has been renamed). Either will work, with spaces or underscores, and is case insensitive. Duplicate names are no problem as long as they are properly ordered in the input updates JSON.

  Use strings to populate EnumFields, and just type the value exactly as it appears in the enum.

  To create the payload JSON and make it available to be loaded by filename in the Enqueue Workflow Batch node, use your web browser's developer console [`<F12>` in Chrome] to watch for the appearance of an `enqueue_batch` request when you click the Invoke button in the frontend. When this appears, select it and navigate to view its request payload. Copy this payload in full, and paste it into a file; then, save the file into the `workflow_payloads/` subdirectory of this node's own folder in your invokeai nodes directory (`<invokeai-install-path>/nodes/workflow-processor-node/workflow_payloads/`).

  <details>
  <summary>

  #### Chrome payload acquisition (animated explanation)

  </summary>

  ![chrome_export](https://github.com/user-attachments/assets/910962a9-a451-4312-a859-4231a4e8b187)

  </details>

  ### Installation:

  To install these nodes, simply place the folder containing this
  repository's code (or just clone the repository yourself) into your
  `invokeai/nodes` folder.

outro: |
  For questions/comments/concerns/etc, use github or drop into the InvokeAI discord where you'll probably find someone who can help.